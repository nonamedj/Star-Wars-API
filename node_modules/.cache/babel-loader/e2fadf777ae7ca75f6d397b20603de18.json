{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\src\\\\App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Planets\";\nimport Starships from \"./components/Starships\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        people = _useState2[0],\n        setPeople = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        planets = _useState4[0],\n        setPlanets = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        starships = _useState6[0],\n        setStarships = _useState6[1];\n\n  const _useState7 = useState([true]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  useEffect(() => {\n    function fetchPeople() {\n      return _fetchPeople.apply(this, arguments);\n    }\n\n    function _fetchPeople() {\n      _fetchPeople = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://swapi.dev/api/people/');\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setPeople(data.results);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchPeople.apply(this, arguments);\n    }\n\n    function fetchPlanets() {\n      return _fetchPlanets.apply(this, arguments);\n    }\n\n    function _fetchPlanets() {\n      _fetchPlanets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('https://swapi.dev/api/planets/');\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context2.sent;\n              setPlanets(data.results);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return _fetchPlanets.apply(this, arguments);\n    }\n\n    function fetchStarships() {\n      return _fetchStarships.apply(this, arguments);\n    }\n\n    function _fetchStarships() {\n      _fetchStarships = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('https://swapi.dev/api/starships/');\n\n            case 2:\n              res = _context3.sent;\n              _context3.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context3.sent;\n              setStarships(data.results);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return _fetchStarships.apply(this, arguments);\n    }\n\n    fetchPeople();\n    fetchPlanets();\n    fetchStarships();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Dimmer, {\n    active: true,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \"Loading\")) : /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(People, {\n    data: people,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/planets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Planets, {\n    data: planets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/starships\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Starships, {\n    data: starships,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/first-app/src/App.jsx"],"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","Switch","Route","Container","Dimmer","Loader","Home","People","Planets","Starships","Footer","App","people","setPeople","planets","setPlanets","starships","setStarships","loading","setLoading","fetchPeople","fetch","res","json","data","results","fetchPlanets","fetchStarships"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport {Container, Dimmer, Loader} from \"semantic-ui-react\";\r\nimport Home from \"./components/Home\";\r\nimport People from \"./components/People\";\r\nimport Planets from \"./components/Planets\";\r\nimport Starships from \"./components/Starships\";\r\nimport Footer from \"./components/Footer\";\r\n\r\n\r\nfunction App(){\r\n\r\n    const [people, setPeople] = useState([]);\r\n    const [planets, setPlanets] = useState([]);\r\n    const [starships, setStarships] = useState([]);\r\n    const [loading, setLoading] = useState([true]);\r\n\r\n    useEffect(() => {\r\n        async function fetchPeople() {\r\n            let res = await fetch('https://swapi.dev/api/people/');\r\n            let data = await res.json();\r\n            setPeople(data.results)\r\n            setLoading(false);\r\n        }\r\n        async function fetchPlanets() {\r\n            let res = await fetch('https://swapi.dev/api/planets/');\r\n            let data = await res.json();\r\n            setPlanets(data.results)\r\n            setLoading(false);\r\n        }\r\n        async function fetchStarships() {\r\n            let res = await fetch('https://swapi.dev/api/starships/');\r\n            let data = await res.json();\r\n            setStarships(data.results)\r\n            setLoading(false);\r\n        }\r\n        fetchPeople();\r\n        fetchPlanets();\r\n        fetchStarships()\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <>\r\n             <Router>\r\n                <Navbar />\r\n                <Container>\r\n                    {loading ? (\r\n                        <Dimmer active inverted>\r\n                            <Loader inverted>Loading</Loader>\r\n                        </Dimmer>\r\n                    ) : (\r\n                        <Switch>\r\n                        <Route exact path='/'>\r\n                            <Home />\r\n                        </Route>\r\n                        <Route exact path='/people'>\r\n                            <People\r\n                                data={people}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path='/planets'>\r\n                            <Planets \r\n                                data={planets}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path='/starships'>\r\n                            <Starships\r\n                                data={starships}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n                    )}\r\n                </Container>\r\n                <Footer></Footer>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}