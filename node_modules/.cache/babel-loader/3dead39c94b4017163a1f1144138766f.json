{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\src\\\\components\\\\Films.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid, GridColumn, CardContent, CardHeader, CardDescription } from \"semantic-ui-react\";\n\nfunction Films() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        films = _useState2[0],\n        setFilms = _useState2[1];\n\n  useEffect(() => {\n    var url = \"https://swapi.dev/api/films\";\n\n    function fetchFilms() {\n      return _fetchFilms.apply(this, arguments);\n    }\n\n    function _fetchFilms() {\n      _fetchFilms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setFilms(data.results);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchFilms.apply(this, arguments);\n    }\n\n    fetchFilms();\n  }, []);\n\n  function find() {\n    alert(\"helo\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }\n  }, films.map((films, i) => {\n    return /*#__PURE__*/React.createElement(GridColumn, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }\n    }, \"Episode:  \", films.episode_id), /*#__PURE__*/React.createElement(CardDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 41\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }\n    }, films.title)))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Searhing\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"findButton\",\n    onClick: find,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Find\")));\n}\n\nexport default Films;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/first-app/src/components/Films.jsx"],"names":["React","useState","useEffect","Card","Grid","GridColumn","CardContent","CardHeader","CardDescription","Films","films","setFilms","url","fetchFilms","fetch","res","json","data","results","find","alert","map","i","episode_id","title"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,WAAhC,EAA6CC,UAA7C,EAAyDC,eAAzD,QAA+E,mBAA/E;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBAEaR,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAENS,KAFM;AAAA,QAECC,QAFD;;AAGbT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,GAAG,GAAG,6BAAV;;AADY,aAEGC,UAFH;AAAA;AAAA;;AAAA;AAAA,6EAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBC,KAAK,CAACF,GAAD,CADzB;;AAAA;AACQG,cAAAA,GADR;AAAA;AAAA,qBAEqBA,GAAG,CAACC,IAAJ,EAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAGIN,cAAAA,QAAQ,CAACM,IAAI,CAACC,OAAN,CAAR;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,OAFY;AAAA;AAAA;;AAOVL,IAAAA,UAAU;AACf,GARQ,EAQP,EARO,CAAT;;AAUA,WAASM,IAAT,GAAgB;AACZC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACH;;AAED,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEK,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIV,KAAK,CAACW,GAAN,CAAU,CAACX,KAAD,EAAOY,CAAP,KAAa;AACpB,wBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuBZ,KAAK,CAACa,UAA7B,CADJ,eAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,KAAK,CAACc,KAAV,CAFJ,CAFJ,CADJ,CADJ,CADJ;AAaH,GAdA,CADJ,CAFL,eAmBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEL,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAnBJ,CADJ;AAgCH;;AACD,eAAeV,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Card, Grid, GridColumn, CardContent, CardHeader, CardDescription} from \"semantic-ui-react\";\r\n \r\nfunction Films() {\r\n\r\n    const [films, setFilms] = useState([]);\r\n    useEffect(() => {\r\n        var url = \"https://swapi.dev/api/films\";   \r\n        async function fetchFilms() {\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n            setFilms(data.results);\r\n          }\r\n          fetchFilms();\r\n    },[])\r\n\r\n    function find() {\r\n        alert(\"helo\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Films</h1>\r\n           { <Grid columns={3}>\r\n                {films.map((films,i) => {\r\n                    return(\r\n                        <GridColumn key={i}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <CardHeader>Episode:  {films.episode_id}</CardHeader>\r\n                                    <CardDescription>\r\n                                        <strong>Title</strong>\r\n                                        <p>{films.title}</p> \r\n                                    </CardDescription>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </GridColumn>\r\n                    )\r\n                })}\r\n            </Grid>}\r\n            <div className=\"search-div\">\r\n                <h1>Searhing</h1>\r\n                <input type=\"text\"/>\r\n                <button id=\"findButton\" onClick={find}>\r\n                    Find\r\n                </button>\r\n            </div>\r\n           \r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Films;"]},"metadata":{},"sourceType":"module"}