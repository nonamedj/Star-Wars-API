{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Star_Wars_API-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Star_Wars_API-app\\\\src\\\\components\\\\Planet.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardDescription } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nfunction Planet(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        result = _useState2[0],\n        setResult = _useState2[1];\n\n  useEffect(() => {\n    axios(\"https://swapi.dev/api/planets/\" + props.match.params.id).then(res => setResult(res.data));\n  }, [props]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Planet Info\"), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.name, \" \"), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.rotation_period), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.population), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Orbitl Period\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.orbital_period), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Diameter\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.diameter), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.climate), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.gravity), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.terrain), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cardContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, result === null || result === void 0 ? void 0 : result.surface_water)))));\n}\n\nexport default Planet;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Star_Wars_API-app/src/components/Planet.jsx"],"names":["React","useEffect","useState","Card","CardContent","CardDescription","axios","Planet","props","result","setResult","match","params","id","then","res","data","name","rotation_period","population","orbital_period","diameter","climate","gravity","terrain","surface_water"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, CardDescription } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Planet(props) {\r\n  const [result, setResult] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios(\"https://swapi.dev/api/planets/\" + props.match.params.id).then((res) =>\r\n      setResult(res.data)\r\n    );\r\n  }, [props]);\r\n  \r\n  return (\r\n    <>\r\n      <h1>Planet Info</h1>\r\n      <Card>\r\n        <CardContent>\r\n          <CardDescription>\r\n            <h1>{result?.name} </h1>\r\n            <strong className=\"cardContent\">Rotation Period</strong>\r\n            <p className=\"cardContent\">{result?.rotation_period}</p>\r\n            <strong className=\"cardContent\">Population</strong>\r\n            <p className=\"cardContent\">{result?.population}</p>\r\n            <strong className=\"cardContent\">Orbitl Period</strong>\r\n            <p className=\"cardContent\">{result?.orbital_period}</p>\r\n            <strong className=\"cardContent\">Diameter</strong>\r\n            <p className=\"cardContent\">{result?.diameter}</p>\r\n            <strong className=\"cardContent\">Climate</strong>\r\n            <p className=\"cardContent\">{result?.climate}</p>\r\n            <strong className=\"cardContent\">Gravity</strong>\r\n            <p className=\"cardContent\">{result?.gravity}</p>\r\n            <strong className=\"cardContent\">Terrain</strong>\r\n            <p className=\"cardContent\">{result?.terrain}</p>\r\n            <strong className=\"cardContent\">Surface Water</strong>\r\n            <p className=\"cardContent\">{result?.surface_water}</p>\r\n          </CardDescription>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default Planet;\r\n"]},"metadata":{},"sourceType":"module"}