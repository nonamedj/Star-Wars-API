{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\src\\\\components\\\\Films.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Grid, GridColumn, CardContent, CardHeader, CardDescription } from \"semantic-ui-react\";\n\nfunction Films() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        films = _useState2[0],\n        setFilms = _useState2[1];\n\n  useEffect(() => {\n    var url = \"https://swapi.dev/api/films\";\n\n    function fetchFilms() {\n      return _fetchFilms.apply(this, arguments);\n    }\n\n    function _fetchFilms() {\n      _fetchFilms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setFilms(data.results);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchFilms.apply(this, arguments);\n    }\n\n    fetchFilms();\n  }, []);\n\n  function getAllStarwarsPeople() {\n    let people = []; // first page\n\n    return axios(\"https://swapi.dev/api/people/\").then(response => {\n      // collect people from first page\n      people = response.data.results;\n      return response.data.count;\n    }).then(count => {\n      // exclude the first request\n      const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n      let promises = []; // start at 2 as you already queried the first page\n\n      for (let i = 2; i <= numberOfPagesLeft; i++) {\n        promises.push(axios(\"https://swapi.dev/api/people?page=\".concat(i)));\n      }\n\n      return Promise.all(promises);\n    }).then(response => {\n      //get the rest records - pages 2 through n.\n      people = response.reduce((acc, data) => [...acc, ...data.data.results], people);\n      return people;\n    }).catch(error => console.log(\"Properly handle your exception here\"));\n  }\n\n  _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var starwarsPeople, i;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return getAllStarwarsPeople();\n\n        case 2:\n          starwarsPeople = _context2.sent;\n\n          for (i = 0; i < starwarsPeople.length; i++) {\n            console.log(starwarsPeople[i].name);\n          }\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }))();\n\n  function find() {\n    alert(\"helo\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, films.map((films, i) => {\n    return /*#__PURE__*/React.createElement(GridColumn, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Episode: \", films.episode_id), /*#__PURE__*/React.createElement(CardDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }, films.title)))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Searhing\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"findButton\",\n    onClick: find,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Find\")));\n}\n\nexport default Films;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/first-app/src/components/Films.jsx"],"names":["React","useState","useEffect","axios","Card","Grid","GridColumn","CardContent","CardHeader","CardDescription","Films","films","setFilms","url","fetchFilms","fetch","res","json","data","results","getAllStarwarsPeople","people","then","response","count","numberOfPagesLeft","Math","ceil","promises","i","push","Promise","all","reduce","acc","catch","error","console","log","starwarsPeople","length","name","find","alert","map","episode_id","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  GridColumn,\r\n  CardContent,\r\n  CardHeader,\r\n  CardDescription,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction Films() {\r\n  const [films, setFilms] = useState([]);\r\n  useEffect(() => {\r\n    var url = \"https://swapi.dev/api/films\";\r\n    async function fetchFilms() {\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n      setFilms(data.results);\r\n    }\r\n    fetchFilms();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n    function getAllStarwarsPeople() {\r\n        let people = [];\r\n        // first page\r\n        return axios(\"https://swapi.dev/api/people/\")\r\n            .then(response => {\r\n                // collect people from first page\r\n                people = response.data.results;\r\n                return response.data.count;\r\n            })\r\n            .then(count => {\r\n                // exclude the first request\r\n                const numberOfPagesLeft = Math.ceil((count - 1) / 10);\r\n                let promises = [];\r\n                // start at 2 as you already queried the first page\r\n                for (let i = 2; i <= numberOfPagesLeft; i++) {\r\n                    promises.push(axios(`https://swapi.dev/api/people?page=${i}`));\r\n                }\r\n                return Promise.all(promises);\r\n            })\r\n            .then(response => {\r\n                //get the rest records - pages 2 through n.\r\n                people = response.reduce((acc, data) => [...acc, ...data.data.results], people);\r\n                return people;\r\n            })\r\n            .catch(error => console.log(\"Properly handle your exception here\"));\r\n    }\r\n    \r\n    (async () => {\r\n        const starwarsPeople = await getAllStarwarsPeople();\r\n        for(let i=0;i<starwarsPeople.length;i++) {\r\n            console.log(starwarsPeople[i].name)\r\n        }\r\n    })();\r\n\r\n    \r\n\r\n  function find() {\r\n    alert(\"helo\");\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Films</h1>\r\n      {\r\n        <Grid columns={3}>\r\n          {films.map((films, i) => {\r\n            return (\r\n              <GridColumn key={i}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <CardHeader>Episode: {films.episode_id}</CardHeader>\r\n                    <CardDescription>\r\n                      <strong>Title</strong>\r\n                      <p>{films.title}</p>\r\n                    </CardDescription>\r\n                  </CardContent>\r\n                </Card>\r\n              </GridColumn>\r\n            );\r\n          })}\r\n        </Grid>\r\n      }\r\n      <div className=\"search-div\">\r\n        <h1>Searhing</h1>\r\n        <input className=\"search-input\" type=\"text\" />\r\n        <button id=\"findButton\" onClick={find}>\r\n          Find\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Films;\r\n"]},"metadata":{},"sourceType":"module"}