{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\first-app\\\\src\\\\components\\\\Planets.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid, GridColumn, CardContent, CardHeader, CardDescription } from \"semantic-ui-react\";\n\nfunction Planets({\n  data\n}) {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      pageNum = _useState2[0],\n      setpageNum = _useState2[1];\n\n  var url = \"https://swapi.dev/api/people/?page=\" + pageNum;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        people = _useState4[0],\n        setPeople = _useState4[1];\n\n  useEffect(() => {\n    function fetchPeople() {\n      return _fetchPeople.apply(this, arguments);\n    }\n\n    function _fetchPeople() {\n      _fetchPeople = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              setPeople(data.results);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchPeople.apply(this, arguments);\n    }\n\n    fetchPeople();\n  });\n\n  function Add() {\n    if (pageNum < 9) {\n      pageNum++;\n      setpageNum(pageNum);\n      url = \"https://swapi.dev/api/people/?page=\" + pageNum;\n      console.log(url);\n    }\n  }\n\n  function Prev() {\n    if (pageNum > 1) {\n      pageNum--;\n      setpageNum(pageNum);\n      url = \"https://swapi.dev/api/people/?page=\" + pageNum;\n      console.log(url);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Planets\"), /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }\n  }, data.map((planets, i) => {\n    return /*#__PURE__*/React.createElement(GridColumn, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, planets.name), /*#__PURE__*/React.createElement(CardDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }, \"Climate\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, planets.climate), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, \"Gravity\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, planets.gravity), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 41\n      }\n    }, \"Terrain\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, planets.terrain), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, \"Population\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }\n    }, planets.population)))));\n  })));\n}\n\nexport default Planets;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/first-app/src/components/Planets.jsx"],"names":["React","useState","useEffect","Card","Grid","GridColumn","CardContent","CardHeader","CardDescription","Planets","data","pageNum","setpageNum","url","people","setPeople","fetchPeople","fetch","res","json","results","Add","console","log","Prev","map","planets","i","name","climate","gravity","terrain","population"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Card, Grid, GridColumn, CardContent, CardHeader, CardDescription} from \"semantic-ui-react\";\r\n \r\nfunction Planets({data}) {\r\n\r\n    var [pageNum, setpageNum] = useState(1);\r\n    var url = \"https://swapi.dev/api/people/?page=\" + pageNum;\r\n   \r\n    const [people, setPeople] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchPeople() {\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n            setPeople(data.results);\r\n          }\r\n          fetchPeople();\r\n    })\r\n\r\n    function Add() {\r\n        if(pageNum < 9) {\r\n         pageNum++;\r\n         setpageNum(pageNum)\r\n         url = \"https://swapi.dev/api/people/?page=\" + pageNum;\r\n         console.log(url);\r\n        }\r\n    }\r\n    function Prev() {\r\n        if(pageNum > 1) {\r\n         pageNum--;\r\n         setpageNum(pageNum)\r\n         url = \"https://swapi.dev/api/people/?page=\" + pageNum;\r\n         console.log(url);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Planets</h1>\r\n           { <Grid columns={3}>\r\n                {data.map((planets,i) => {\r\n                    return(\r\n                        <GridColumn key={i}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <CardHeader>{planets.name}</CardHeader>\r\n                                    <CardDescription>\r\n                                        <strong>Climate</strong>\r\n                                        <p>{planets.climate}</p>\r\n                                        <strong>Gravity</strong>\r\n                                        <p>{planets.gravity}</p>\r\n                                        <strong>Terrain</strong>\r\n                                        <p>{planets.terrain}</p>\r\n                                        <strong>Population</strong>\r\n                                        <p>{planets.population}</p>\r\n                                    </CardDescription>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </GridColumn>\r\n                    )\r\n                })}\r\n            </Grid>}\r\n        </>\r\n    )\r\n}\r\nexport default Planets;"]},"metadata":{},"sourceType":"module"}